security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt

    providers:
        security_provider:
            entity:
                class: App\Entity\User
                property: username

    role_hierarchy:
        ROLE_USER_MANAGER: [ ROLE_USER, ROLE_USERS_GET ]
        ROLE_ADMIN: [ ROLE_USER_MANAGER ]

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
        refresh:
            pattern:  ^/api/users/token/refresh
            stateless: true
            anonymous: true
        login:
            pattern:  ^/api/users/token
            stateless: true
            anonymous: true
            json_login:
                check_path: /api/users/token
                username_path: username
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        main:
            pattern:   ^/api/
            stateless: true
            anonymous: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

    access_control:
        - { path: ^/api/users/token, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/docs, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/healthcheck, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/, roles: [ ROLE_USER ] }